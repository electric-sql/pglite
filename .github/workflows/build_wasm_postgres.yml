name: Build WASM PGlite files

permissions:
  pull-requests: write
  issues: write
  contents: read

on:
  workflow_call:

jobs:
  build:
    name: Build WASM Postgres
    runs-on: ubuntu-22.04
    env:
      BUILD_CONFIG_FILE: .buildconfig
      SDK_ARCHIVE: python3.12-wasm-sdk-Ubuntu-22.04.tar.lz4
      SDKROOT: /opt/python-wasm-sdk
      SYS_PYTHON: /usr/bin/python3
      PGROOT: /tmp/pglite
      TOTAL_MEMORY: 128MB
      DEBUG: false
      OBJDUMP: true
      EXTRA_EXT: vector

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set build parameters
        run: |
          cat ${{ env.BUILD_CONFIG_FILE }} >> $GITHUB_ENV

      - name: Restore cached build
        id: cache-restore
        uses: actions/cache@v4
        with:
          path: |
            /opt/python-wasm-sdk
            /tmp/web
            /tmp/pglite
            /tmp/sdk/postgres-*.tar.gz
            postgres
            postgresql-*
          key: build-cache-${{ hashFiles('.buildconfig', 'cibuild.sh', '.github/workflows/build_wasm_postgres.yml', 'package.json', 'cibuild/**', 'patches/*.c', 'patches/*.h', 'patches/**/*.diff') }}

      - name: Install python-wasm-sdk for emsdk/wasi+prebuilts
        if: steps.cache-restore.outputs.cache-hit != 'true'
        working-directory: /
        run: |
          sudo apt-get install -y lz4 wget pv bash
          echo https://github.com/pygame-web/python-wasm-sdk/releases/download/$SDK_VERSION/$SDK_ARCHIVE
          curl -sL --retry 5 https://github.com/pygame-web/python-wasm-sdk/releases/download/$SDK_VERSION/$SDK_ARCHIVE | tar xvP --use-compress-program=lz4 | pv -p -l -s 24400 >/dev/null

      - name: Build postgres WASM via emsdk
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: |
          bash ./cibuild.sh

      - name: Build contributed extensions
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: |
          bash ./cibuild.sh contrib

      - name: Build extra extensions
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: |
          bash ./cibuild.sh extra

      - name: Pack node distribution
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: |
          bash ./cibuild.sh node

      - name: Link postgres WASM for web
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: |
          bash ./cibuild.sh linkweb

      - name: Copy release for PGlite build
        run: |
          bash ./cibuild.sh pglite-prep

      - name: Upload Postgres to Github artifacts
        id: upload-postgres-wasm
        uses: actions/upload-artifact@v4
        with:
          name: postgres-wasm
          path: /tmp/sdk/postgres-*.tar.gz
          retention-days: 60

      - name: Upload PGlite Interim to Github artifacts
        id: upload-pglite-interim-build-files
        uses: actions/upload-artifact@v4
        with:
          name: pglite-interim-build-files
          path: ./packages/pglite/release/**
          retention-days: 60

      - name: Upload PGlite Web Interim to Github artifacts
        id: upload-demos
        uses: actions/upload-artifact@v4
        with:
          name: pglite-web-build-files
          path: /tmp/web/**
          retention-days: 60

      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: fc
        if: github.event_name == 'pull_request'
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Built bundles

      - name: Create or update build outputs comment
        uses: peter-evans/create-or-update-comment@v4
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        continue-on-error: true
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Built bundles:
            - Postgres WASM: ${{ steps.upload-postgres-wasm.outputs.artifact-url }}
            - Interim build files: ${{ steps.upload-pglite-interim-build-files.outputs.artifact-url }}
          edit-mode: replace
