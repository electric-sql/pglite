///
/// ExecProtocolOptionsNative.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import NitroModules

/**
 * Represents an instance of `ExecProtocolOptionsNative`, backed by a C++ struct.
 */
public typealias ExecProtocolOptionsNative = margelo.nitro.electricsql.pglite.ExecProtocolOptionsNative

public extension ExecProtocolOptionsNative {
  private typealias bridge = margelo.nitro.electricsql.pglite.bridge.swift

  /**
   * Create a new instance of `ExecProtocolOptionsNative`.
   */
  init(syncToFs: Bool?) {
    self.init({ () -> bridge.std__optional_bool_ in
      if let __unwrappedValue = syncToFs {
        return bridge.create_std__optional_bool_(__unwrappedValue)
      } else {
        return .init()
      }
    }())
  }

  var syncToFs: Bool? {
    @inline(__always)
    get {
      return self.__syncToFs.value
    }
    @inline(__always)
    set {
      self.__syncToFs = { () -> bridge.std__optional_bool_ in
        if let __unwrappedValue = newValue {
          return bridge.create_std__optional_bool_(__unwrappedValue)
        } else {
          return .init()
        }
      }()
    }
  }
}
