--- postgresql/src/backend/utils/init/postinit.c
+++ postgresql-wasm/src/backend/utils/init/postinit.c
@@ -13,6 +13,7 @@
  *
  *-------------------------------------------------------------------------
  */
+#define PG_POSTINIT
 #include "postgres.h"
 
 #include <ctype.h>
@@ -714,6 +715,7 @@
  *		Be very careful with the order of calls in the InitPostgres function.
  * --------------------------------
  */
+
 void
 InitPostgres(const char *in_dbname, Oid dboid,
 			 const char *username, Oid useroid,
@@ -883,8 +885,18 @@
 	}
 	else if (!IsUnderPostmaster)
 	{
+#if defined(__EMSCRIPTEN__) || defined(__wasi__)
+if (!strcmp( username , WASM_USERNAME )) {
+#endif
 		InitializeSessionUserIdStandalone();
 		am_superuser = true;
+#if defined(__EMSCRIPTEN__) || defined(__wasi__)
+} else {
+        //puts("# 894: switching session id");
+        InitializeSessionUserId(username, InvalidOid);
+		am_superuser = superuser();
+}
+#endif
 		if (!ThereIsAtLeastOneRole())
 			ereport(WARNING,
 					(errcode(ERRCODE_UNDEFINED_OBJECT),
@@ -1239,6 +1251,32 @@
 		CommitTransactionCommand();
 }
 
+/* ========================================================================*/
+/*
+void
+ReInitPostgres(const char *in_dbname, Oid dboid,
+			 const char *username, Oid useroid,
+			 bool load_session_libraries,
+			 bool override_allow_connections,
+			 char *out_dbname)
+{
+    puts("ReInitPostgres:Begin");
+    InitPostgres(in_dbname, dboid, username, useroid, load_session_libraries, override_allow_connections, out_dbname);
+    puts("ReInitPostgres:End");
+}
+*/
+/* ========================================================================*/
+
+
+
+
+
+
+
+
+
+
+
 /*
  * Process any command-line switches and any additional GUC variable
  * settings passed in the startup packet.
@@ -1345,14 +1383,15 @@
 static void
 ShutdownPostgres(int code, Datum arg)
 {
+puts("# 1348: " __FILE__);
 	/* Make sure we've killed any active transaction */
 	AbortOutOfAnyTransaction();
-
 	/*
 	 * User locks are not released by transaction end, so be sure to release
 	 * them explicitly.
 	 */
 	LockReleaseAll(USER_LOCKMETHOD, true);
+puts("# 1356: " __FILE__);
 }
 
 
